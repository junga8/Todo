[{"/Users/prabhat/JWorkShop/todo-app/src/index.js":"1","/Users/prabhat/JWorkShop/todo-app/src/App.js":"2","/Users/prabhat/JWorkShop/todo-app/src/reportWebVitals.js":"3","/Users/prabhat/JWorkShop/todo-app/src/Components/learn/FirstComponent.jsx":"4","/Users/prabhat/JWorkShop/todo-app/src/Components/learn/SecondComponent.jsx":"5","/Users/prabhat/JWorkShop/todo-app/src/Components/learn/ThirdComponent.jsx":"6","/Users/prabhat/JWorkShop/todo-app/src/Components/counter/Counter.jsx":"7","/Users/prabhat/JWorkShop/todo-app/src/Components/todo/TodoApp.jsx":"8","/Users/prabhat/JWorkShop/todo-app/src/Components/todo/AuthenticationService.js":"9","/Users/prabhat/JWorkShop/todo-app/src/Components/todo/AuthenticatedRoute.jsx":"10","/Users/prabhat/JWorkShop/todo-app/src/Components/todo/LoginComponent.jsx":"11","/Users/prabhat/JWorkShop/todo-app/src/Components/todo/ListTodosComponent.jsx":"12","/Users/prabhat/JWorkShop/todo-app/src/Components/todo/HeaderComponent.jsx":"13","/Users/prabhat/JWorkShop/todo-app/src/Components/todo/ErrorComponent.jsx":"14","/Users/prabhat/JWorkShop/todo-app/src/Components/todo/FooterComponent.jsx":"15","/Users/prabhat/JWorkShop/todo-app/src/Components/todo/LogoutComponent.jsx":"16","/Users/prabhat/JWorkShop/todo-app/src/Components/todo/WelcomeComponent.jsx":"17","/Users/prabhat/JWorkShop/todo-app/src/api/todo/HelloWorldService.js":"18","/Users/prabhat/JWorkShop/todo-app/src/api/todo/TodoDataService.js":"19","/Users/prabhat/JWorkShop/todo-app/src/api/todo/TodoComponent.jsx":"20"},{"size":500,"mtime":1608403154345,"results":"21","hashOfConfig":"22"},{"size":852,"mtime":1623177294705,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1608403154346,"results":"24","hashOfConfig":"22"},{"size":493,"mtime":1608411555167,"results":"25","hashOfConfig":"22"},{"size":216,"mtime":1608412157141,"results":"26","hashOfConfig":"22"},{"size":287,"mtime":1608412166075,"results":"27","hashOfConfig":"22"},{"size":3899,"mtime":1623177232931,"results":"28","hashOfConfig":"22"},{"size":2390,"mtime":1627767807466,"results":"29","hashOfConfig":"22"},{"size":809,"mtime":1627694364112,"results":"30","hashOfConfig":"22"},{"size":526,"mtime":1621102989885,"results":"31","hashOfConfig":"22"},{"size":2840,"mtime":1627607273373,"results":"32","hashOfConfig":"22"},{"size":4811,"mtime":1627767916532,"results":"33","hashOfConfig":"22"},{"size":1737,"mtime":1627765147967,"results":"34","hashOfConfig":"22"},{"size":137,"mtime":1623177138962,"results":"35","hashOfConfig":"22"},{"size":322,"mtime":1621102659514,"results":"36","hashOfConfig":"22"},{"size":392,"mtime":1621102760319,"results":"37","hashOfConfig":"22"},{"size":2053,"mtime":1627605665443,"results":"38","hashOfConfig":"22"},{"size":678,"mtime":1627767732828,"results":"39","hashOfConfig":"22"},{"size":309,"mtime":1627768813638,"results":"40","hashOfConfig":"22"},{"size":1608,"mtime":1627769530352,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"14p1ohn",{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/prabhat/JWorkShop/todo-app/src/index.js",[],["89","90"],"/Users/prabhat/JWorkShop/todo-app/src/App.js",["91","92","93","94"],"import React, {Component} from 'react'\nimport './App.css'\nimport './bootstrap.css'\nimport Counter from './Components/counter/Counter'\nimport TodoApp from './Components/todo/TodoApp'\n\nimport FirstComponent from './Components/learn/FirstComponent'\nimport SecondComponent from './Components/learn/SecondComponent'\nimport ThirdComponent from './Components/learn/ThirdComponent'\n\n\n\nclass App extends Component {\n  render(){\n  return (\n    <div className=\"App\">\n  \n  {/*<Counter/>*/}\n  <TodoApp/> \n\n    </div>\n  );\n}\n}\n\n// class LearningComponents extends Component{\n//   render(){\n//     return (\n//       <div className=\"LearningComponents\">\n//       My Hello World \n//       <FirstComponent></FirstComponent>\n//       <SecondComponent></SecondComponent>\n//       <ThirdComponent></ThirdComponent>\n//       </div>\n//     )\n//   }\n// }\n\n\nexport default App\n","/Users/prabhat/JWorkShop/todo-app/src/reportWebVitals.js",[],"/Users/prabhat/JWorkShop/todo-app/src/Components/learn/FirstComponent.jsx",[],"/Users/prabhat/JWorkShop/todo-app/src/Components/learn/SecondComponent.jsx",[],"/Users/prabhat/JWorkShop/todo-app/src/Components/learn/ThirdComponent.jsx",["95"],"\nimport React , {Component} from 'react'; \n\n// this is a functional component \n//1. define a function with specific name and return something \nexport default function ThirdComponent() {\n\n    return (\n      <div className=\"thirdComponent\">\n      Third Component\n      </div>\n    );\n  \n  }","/Users/prabhat/JWorkShop/todo-app/src/Components/counter/Counter.jsx",["96"],"\nimport { render } from '@testing-library/react';\nimport React, { Component }  from 'react'; \nimport PropTypes from 'prop-types'\nimport './Counter.css'\n\n\nclass Counter extends Component {\n\n    constructor(){\n        super()\n        \n        this.state = {\n            //this represents the Total count \n            counter : 0 \n\n        }\n\n        //binding the method to the class so the state can be accessed by the method \n\n        this.increment = this.increment.bind(this);\n        this.decrement = this.decrement.bind(this);\n        this.reset = this.reset.bind(this); \n\n    }\n\n    render(){\n        return (\n     <div className=\"Counter\">\n        \n        <CounterButton by = {1} incrementMethod = {this.increment} decrementMethod = {this.decrement}/>\n        <CounterButton by= {5} incrementMethod = {this.increment} decrementMethod = {this.decrement}/>\n        <CounterButton by= {10}incrementMethod = {this.increment} decrementMethod = {this.decrement}/>\n        <span className= \"count\"> {this.state.counter}</span> \n        <div>\n            <button className= \"reset\" onClick = {this.reset}>RESET</button>\n        </div>\n            \n     </div>\n     //span is used to display info above \n        );\n      }\n\n\n      reset(){\n          this.setState(\n              {counter : 0 }\n          )\n      }\n      \n\n      increment (by) {\n     \n      // console.log(`Increment from child - ${by}`)\n\n        this.setState(\n            (prevState) => {\n            return {counter : prevState.counter + by}\n            //  return {counter : this.state.counter + by}\n  \n        })\n    }\n\n    decrement (by){\n        this.setState(\n            (prevState) => {\n                return {counter : prevState.counter - by }\n            }\n\n        )\n    }\n\n}\n\n\n\n class CounterButton extends Component {\n\n    //this is a default constructer even if we comment it out it'll be provided by counterButton by default \n\n    //constructor(){\n        //can't use this without calling the super method \n        //super(); // people tend to forget this while coding \n        // this.state  =  {\n\n        //     counter : 0 \n    \n        // }\n        // //binding the method to the class so the state can be accessed by the method \n        // //binding this state to increment methods so this becomes avilable in the increment method \n        // this.increment = this.increment.bind(this);// binding method to the class (binding this to increment)\n        // this.decrement = this.decrement.bind(this);\n    \n    //}\n   \n    render ()  {\n        //const style = {fontSize : \"50px\",   padding: \"15px 30px\"}; \n    return (\n        <div className=\"counter\">\n\n            <button onClick = { () => this.props.incrementMethod(this.props.by)}> +{this.props.by} </button>\n\n            <button onClick = {() => this.props.decrementMethod(this.props.by)}> -{this.props.by} </button>\n           {/* <span className= \"count\"> {this.state.counter}</span> */}\n            \n        </div>\n        //this displays the value of the state in the button \n    )\n\n    \n    }\n\n//     decrement = () => {\n//         //this.state.counter++ ; \n//         this.setState(\n//            (prevState) => {\n//             return {counter : prevState.counter - this.props.by }\n//         });\n//         this.props.decrementMethod(this.props.by);\n//     }\n  \n  \n// //arrow function prevents the need to do binding in the constrctoer \n//    increment = () => {\n//       //this.state.counter++ ; \n//       this.setState(\n//          (prevState) => {\n//           return {counter : prevState.counter + this.props.by }\n//       });\n//       this.props.incrementMethod(this.props.by);\n//   }\n}\n\n\n  //creating a default prop basically if nothing is given on prop in out app.js\n\n  CounterButton.defaultProps = {\n      by : 1 \n\n  }\n\n  //type check on the prop value \n  CounterButton.protoTypes = {\n\n    by : PropTypes.number \n\n  }\n\n  export default Counter","/Users/prabhat/JWorkShop/todo-app/src/Components/todo/TodoApp.jsx",["97","98"],"import React , {Component} from 'react'\nimport {BrowserRouter as Router , Route, Switch, withRouter } from 'react-router-dom'\nimport AuthenticationService from './AuthenticationService.js'\nimport AuthenticatedRoute from './AuthenticatedRoute.jsx'\nimport LoginComponent from './LoginComponent.jsx'\nimport ListTodosComponent from './ListTodosComponent.jsx'\nimport  ErrorComponent from './ErrorComponent.jsx'\nimport HeaderComponent from './HeaderComponent.jsx'\nimport FooterComponent from './FooterComponent.jsx'\nimport LogoutComponent from './LogoutComponent.jsx'\nimport WelcomeComponent from './WelcomeComponent'\nimport TodoComponent from '../../api/todo/TodoComponent'\n  \n\n   \n\nclass TodoApp extends Component {\n\n    render(){\n        return (\n            <div className = \"TodoApp\">\n\n                <Router> \n                    <>  \n                    <HeaderComponent/>\n                        <Switch> \n                            <Route path = \"/\" exact  component = {LoginComponent}/>   \n                            <Route path = \"/login\" component = {LoginComponent}/>\n                            <AuthenticatedRoute path = \"/welcome/:name\" component = {WelcomeComponent}/>\n                            <AuthenticatedRoute path = \"/todos/:id\" component = {TodoComponent}/>\n                            <AuthenticatedRoute path = \"/todos\" component = {ListTodosComponent}/> \n                            <AuthenticatedRoute path = \"/logout\" component = {LogoutComponent}/>\n                          \n                            <Route component = {ErrorComponent}/> \n                        </Switch>\n                     <FooterComponent/>\n                    </>\n                </Router>\n\n              {/* <LoginComponent/>\n               <WelcomeComponent/>*/}\n               \n\n            </div>\n        )\n    }\n}\n//autheincated rout basicall means only authenticated users can gain acess menaing if email pass match \n\n\n//this makes the HeaderCompondnent dynaic \n//export default withRouter(HeaderComponent);\n\n\n\n\n// function ShowInvalidCredintials(props) {\n//     if(props.hasLoginFailed){\n//         return <div>Invalid Credentials</div>\n//     }\n//     return null \n        \n// }\n\n// function ShowLoginSuscessMessage(props) {\n//     if(props.showSuscessMessage){\n//         return <div>Login Susccesful</div>\n//     }\n//     return null \n        \n// }\n\nexport default TodoApp  ","/Users/prabhat/JWorkShop/todo-app/src/Components/todo/AuthenticationService.js",[],"/Users/prabhat/JWorkShop/todo-app/src/Components/todo/AuthenticatedRoute.jsx",["99"],"import React, {Component} from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport AuthenticationService from './AuthenticationService.js'\n\n\n\nclass AuthenticatedRoute extends Component {\n\n    render() {\n        if(AuthenticationService.isUserLoggedIn()){\n            {/*this is a spread operator passes elements in the array as individual parameters */}\n            return <Route {...this.props}/> \n        }else {\n            return <Redirect to = \"/login\"/>\n        }\n\n    }\n}\n\nexport default AuthenticatedRoute ","/Users/prabhat/JWorkShop/todo-app/src/Components/todo/LoginComponent.jsx",[],"/Users/prabhat/JWorkShop/todo-app/src/Components/todo/ListTodosComponent.jsx",["100","101"],"import React, {Component} from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport AuthenticationService from './AuthenticationService'\nimport TodoDataService  from '../../api/todo/TodoDataService'\n\n\n\nclass ListTodosComponent extends Component{\n    constructor(props){\n\n        console.log('Constructor')\n        super(props)\n        this.state = {\n\n            todo : [], message : null\n        }\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this)\n        this.refreshTodos = this.refreshTodos.bind(this)\n        this.updateTodoClicked = this.updateTodoClicked.bind(this)\n    }\n    //try not to do the initial api call in the constructer bc the state won't initilize untill the api call is completed in the constructor \n\n    //is called immediately after a component is mounted \n    componentDidMount(){\n\n        console.log('component did mount')\n\n        this.refreshTodos();\n    \n         console.log(this.state)\n\n    }\n\n\n    //same logic as component did mount we doing this cuz we need to re render our page to refresh our tods as we delete em \n    refreshTodos(){\n\n        let username = AuthenticationService.getLoggedInUserName()\n        TodoDataService.retriveAllTodos(username)\n            .then(\n                response => {\n\n\n                    this.setState({\n                        todo : response.data\n                    })\n                }\n            )\n\n\n    }\n\n    componentWillUnmount(){\n        console.log('component will unmount ')\n    }\n\n    deleteTodoClicked(id){\n\n        let username = AuthenticationService.getLoggedInUserName()\n        //console.log(id +\"  \" + username);\n\n        TodoDataService.deletTodo(username, id)\n        .then (\n            response => {\n\n                this.setState({\n                    message : `Delete of todo ${id} Suscessful`\n                })\n                this.refreshTodos()\n            }\n        )\n\n\n    }\n\n\n    updateTodoClicked(id){\n\n        console.log('update'  + id )\n        //redirecting from one component to another \n\n        this.props.history.push(`/todos/${id}`)\n\n\n\n        // let username = AuthenticationService.getLoggedInUserName()\n        // //console.log(id +\"  \" + username);\n\n        // TodoDataService.deletTodo(username, id)\n        // .then (\n        //     response => {\n\n        //         this.setState({\n        //             message : `Delete of todo ${id} Suscessful`\n        //         })\n        //         this.refreshTodos()\n        //     }\n        // )\n\n\n    }\n\n    //shouldComponentUpdate is an oppurtunity react provides u to improve the performance of your application \n    //if you return true the render methods gets call at the end meaning our states can change one more time depending on the app logic \n    //true or false depend on the logic of our app \n    shouldComponentUpdate(nextProps, nextState){\n        console.log('shouldComponentUpdate ')\n        console.log( nextProps)\n        console.log(nextState)\n        return true \n\n    }\n\n\n\n    render(){\n\n\n        console.log('render')\n        return (\n            <div>  \n                <h1> List Todos</h1>\n                {this.state.message && <div className = \"alert alert-success\"> {this.state.message}</div>}\n                <div className = \"container\">  \n                    <table className = \"table\"> \n                        <thead> \n                            <tr>\n                         \n                                <th>description</th> \n                                <th>Is Completed?</th> \n                                <th>Target date</th>\n                                <th> Update</th>\n                                <th> Delete</th>\n  \n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.todo.map(\n                                todo => \n                                        <tr key = {todo.id}>\n                                            \n                                            <td>{todo.description}</td>\n                                            <td>{todo.done.toString()}</td>\n                                            <td>{todo.targetDate.toString()}</td>\n                                            <td> <button className = \"btn btn-success\" onClick = {() => this.updateTodoClicked(todo.id)}> Update </button></td>\n                                            <td> <button className = \"btn btn-warning\" onClick = {() => this.deleteTodoClicked(todo.id)}> Delete </button></td>\n                                        </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n         )}\n}\n\nexport default ListTodosComponent","/Users/prabhat/JWorkShop/todo-app/src/Components/todo/HeaderComponent.jsx",[],"/Users/prabhat/JWorkShop/todo-app/src/Components/todo/ErrorComponent.jsx",[],"/Users/prabhat/JWorkShop/todo-app/src/Components/todo/FooterComponent.jsx",[],"/Users/prabhat/JWorkShop/todo-app/src/Components/todo/LogoutComponent.jsx",[],"/Users/prabhat/JWorkShop/todo-app/src/Components/todo/WelcomeComponent.jsx",[],"/Users/prabhat/JWorkShop/todo-app/src/api/todo/HelloWorldService.js",[],"/Users/prabhat/JWorkShop/todo-app/src/api/todo/TodoDataService.js",["102"],"/Users/prabhat/JWorkShop/todo-app/src/api/todo/TodoComponent.jsx",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":15},{"ruleId":"107","severity":1,"message":"111","line":7,"column":8,"nodeType":"109","messageId":"110","endLine":7,"endColumn":22},{"ruleId":"107","severity":1,"message":"112","line":8,"column":8,"nodeType":"109","messageId":"110","endLine":8,"endColumn":23},{"ruleId":"107","severity":1,"message":"113","line":9,"column":8,"nodeType":"109","messageId":"110","endLine":9,"endColumn":22},{"ruleId":"107","severity":1,"message":"114","line":2,"column":17,"nodeType":"109","messageId":"110","endLine":2,"endColumn":26},{"ruleId":"107","severity":1,"message":"115","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":16},{"ruleId":"107","severity":1,"message":"116","line":2,"column":50,"nodeType":"109","messageId":"110","endLine":2,"endColumn":60},{"ruleId":"107","severity":1,"message":"117","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":29},{"ruleId":"118","severity":1,"message":"119","line":11,"column":13,"nodeType":"120","messageId":"121","endLine":11,"endColumn":99},{"ruleId":"107","severity":1,"message":"122","line":2,"column":9,"nodeType":"109","messageId":"110","endLine":2,"endColumn":14},{"ruleId":"107","severity":1,"message":"123","line":2,"column":16,"nodeType":"109","messageId":"110","endLine":2,"endColumn":24},{"ruleId":"124","severity":1,"message":"125","line":20,"column":16,"nodeType":"126","messageId":"127","endLine":20,"endColumn":35,"fix":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'Counter' is defined but never used.","Identifier","unusedVar","'FirstComponent' is defined but never used.","'SecondComponent' is defined but never used.","'ThirdComponent' is defined but never used.","'Component' is defined but never used.","'render' is defined but never used.","'withRouter' is defined but never used.","'AuthenticationService' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Route' is defined but never used.","'Redirect' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"131","text":"132"},"no-global-assign","no-unsafe-negation",[309,309],"()"]